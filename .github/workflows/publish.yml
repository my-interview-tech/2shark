name: Publish

on: workflow_dispatch

concurrency: ${{ github.workflow }}

jobs:
  build:
    env:
      CI: true
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Check permissions
        if: ${{ contains(fromJSON('["dHIM24"]'), github.actor) == false }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed("You don't have permission to run this workflow!");

      - uses: actions/checkout@v4
        with:
          ref: 'master'
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Check for changesets
        id: changesets
        run: |
          if ls .changeset/*.md 1> /dev/null 2>&1; then
            echo "has-changesets=true" >> $GITHUB_OUTPUT
            echo "Found changesets"
          else
            echo "has-changesets=false" >> $GITHUB_OUTPUT
            echo "No changesets found"
          fi

      - name: Version packages
        if: steps.changesets.outputs.has-changesets == 'true'
        run: npx changeset version

      - name: Get version
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "chore: version bump and changelog update" || exit 0
          git push

      - name: Setup NPM auth
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.SHARP_NPM_PUBLISH_TOKEN }}" > ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc


      - name: Publish to NPM
        run: npm publish --access public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git tag and release
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git tag "v$VERSION"
          git push origin "v$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          release_name: Release v${{ steps.get-version.outputs.version }}
          body: |
            ## Changes in this Release
            
            Automated release from GitHub Actions.
            
            ### Installation
            
            ```bash
            npm install 2shark
            ```
            
            ### Usage
            
            ```typescript
            import { parseDatabase, initDatabase } from '2shark';
            
            const items = await parseDatabase({
              docsPath: './docs',
              configPath: './config/category-mapping.yaml'
            });
            ```
            
            ### Features
            
            - Built with esbuild for fast compilation
            - TypeScript definitions included
            - PostgreSQL database integration
            - CLI interface for easy usage
          draft: false
          prerelease: false 